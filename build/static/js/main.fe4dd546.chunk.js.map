{"version":3,"sources":["components/Spinner.js","components/ErrorMessage.js","components/Filter.js","components/UserProfile.js","components/Table.js","components/App.js","serviceWorker.js","index.js"],"names":["Spinner","react_default","a","createElement","className","ErrorMessage","error","this","props","Component","Filter","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","changeValue","bind","assertThisInitialized","buttonClick","_ref","target","setState","onFilterChange","type","onChange","placeholder","onClick","UserProfile","_this$props$userData","userData","firstName","lastName","description","address","streetAddress","city","zip","Table","sortTableColumn","column","_this$state","sortField","sortDirection","sortedData","data","reverse","page","offset","sort","b","filter","changePage","showUserProfile","filterString","userProfile","_this2","_this$state2","filteredData","dataItem","values","toString","toLowerCase","indexOf","components_Filter","slice","map","key","id","phone","email","Pagination_default","activePage","itemsCountPerPage","totalItemsCount","length","components_UserProfile","UrlValueData","small_data_value","big_data_value","wrong_url","App","isLoading","getUrl","loadData","url","fetch","then","response","json","catch","message","components_ErrorMessage","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe4dd546.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"Spinner__layout\">\r\n        <div  className=\"Spinner__circle\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React,  { Component } from 'react';\r\n\r\nclass ErrorMessage extends Component {\r\n\r\n  render() {\r\n    const { error } = this.props;\r\n\r\n    return(\r\n      <div className='Error-message'>\r\n        <p>Ошибка: {error}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from 'react';\r\n\r\nclass Filter extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: ''\r\n    };\r\n\r\n    this.changeValue = this.changeValue.bind(this);\r\n    this.buttonClick = this.buttonClick.bind(this);\r\n  }\r\n\r\n  changeValue({ target: { value } }) {\r\n    this.setState({\r\n      value\r\n    });\r\n  }\r\n\r\n  buttonClick() {\r\n    const { onFilterChange } = this.props;\r\n    const { value } = this.state;\r\n\r\n    onFilterChange(value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div className=\"Filter-panel\">\r\n        <span>Фильтр</span>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={this.changeValue}\r\n          placeholder=\"Введите подстроку\"\r\n        />\r\n        <button onClick={this.buttonClick}>Найти</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React,  { Component } from 'react';\r\n\r\nclass UserProfile extends Component {\r\n\r\n  render() {\r\n    const { firstName, lastName, description, address } = this.props.userData;\r\n    return(\r\n      <div className='User-profile'>\r\n        Выбран пользователь: <b>{firstName} {lastName}</b>\r\n        <p>Описание: {description} </p>\r\n        Адрес проживания: <b>{address.streetAddress}</b><br/>\r\n        Город: <b>{address.city}</b><br/>\r\n        Провинция/штат: <b>{address.state}</b><br/>\r\n        Индекс: <b>{address.zip}</b>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React,  { Component } from 'react';\r\nimport Filter from './Filter';\r\nimport Pagination from \"react-js-pagination\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst totalElementsOnPage = 20;\r\n\r\nclass Table extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      sortedData: null,\r\n      filter: '',\r\n      sortField: '',\r\n      sortDirection: -1,\r\n      page: 1,\r\n      offset: 0\r\n    }\r\n\r\n    this.changePage = this.changePage.bind(this);\r\n\r\n    this.onFilterChange = this.onFilterChange.bind(this);\r\n    this.showUserProfile = this.showUserProfile.bind(this);\r\n  }\r\n\r\n  sortTableColumn = (column) => {\r\n    let { sortField, sortDirection, sortedData } = this.state;\r\n    const { data } = this.props;\r\n\r\n    if(column === sortField) {\r\n      sortedData.reverse();\r\n      this.setState({\r\n        sortedData,\r\n        sortDirection: -1*sortDirection,\r\n        page: 1,\r\n        offset: 0\r\n      });\r\n    }\r\n    else {\r\n      sortedData = data.sort((a, b) => {\r\n        if (a[column] < b[column]) return -1;\r\n        if (a[column] > b[column]) return 1;\r\n        return 0;\r\n      })\r\n      this.setState({\r\n        sortedData,\r\n        sortField: column,\r\n        sortDirection: 1,\r\n        page: 1,\r\n        offset: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  changePage(page) {\r\n    this.setState({ page, offset: totalElementsOnPage*(page-1) });\r\n  }\r\n\r\n  onFilterChange(filterString) {\r\n    this.setState({\r\n      filter: filterString,\r\n      page: 1,\r\n      offset: 0\r\n    });\r\n  }\r\n\r\n  showUserProfile(userData) {\r\n    this.setState({ userProfile: userData });\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props,\r\n      { offset,\r\n        sortField,\r\n        sortDirection,\r\n        userProfile\r\n      } = this.state,\r\n      sortedData = this.state.sortedData || data,\r\n      filteredData = sortedData.filter(dataItem => {\r\n        return Object.values(dataItem).toString().toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1;\r\n      });\r\n\r\n    return (\r\n      <div className=\"Table-container\">\r\n        <Filter onFilterChange={this.onFilterChange} />\r\n        <table>\r\n          <thead>\r\n            <tr className=\"Table-container__headRow\">\r\n              <th className={sortField === 'id' ? 'sortDirection' + sortDirection : null}\r\n                onClick={() => {this.sortTableColumn('id')}}>id</th>\r\n              <th className={sortField === 'firstName' ? 'sortDirection' + sortDirection : null}\r\n                onClick={() => {this.sortTableColumn('firstName')}}>firstName</th>\r\n              <th className={sortField === 'lastName' ? 'sortDirection' + sortDirection : null}\r\n                onClick={() => {this.sortTableColumn('lastName')}}>lastName</th>\r\n              <th className={sortField === 'email' ? 'sortDirection' + sortDirection : null}\r\n                onClick={() => {this.sortTableColumn('email')}}>email</th>\r\n              <th className={sortField === 'phone' ? 'sortDirection' + sortDirection : null}\r\n                onClick={() => {this.sortTableColumn('phone')}}>phone</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.slice(offset, offset + totalElementsOnPage).map(userData => (\r\n              <tr className='Table-container__row' key={userData.id + userData.phone} onClick={() => {this.showUserProfile(userData)}}>\r\n                <td>{userData.id}</td>\r\n                <td>{userData.firstName}</td>\r\n                <td>{userData.lastName}</td>\r\n                <td>{userData.email}</td>\r\n                <td>{userData.phone}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          activePage={this.state.page}\r\n          itemsCountPerPage={totalElementsOnPage}\r\n          totalItemsCount={filteredData.length}\r\n          onChange={this.changePage}\r\n        />\r\n        {userProfile && <UserProfile userData={userProfile}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\nimport '../App.css';\nimport Spinner from './Spinner';\nimport ErrorMessage from './ErrorMessage';\nimport Table from './Table';\n\nconst UrlValueData = {\n  small_data_value: 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}',\n  big_data_value: 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}',\n  wrong_url: 'http://www.filltexttttt.com/?rows=1000&id'\n};\n\nclass App extends Component {\n\n  state = {\n    data: [],\n    error: null,\n    isLoading: false,\n    userProfile: null\n  }\n\n  getUrl = (type) => {\n    return UrlValueData[type];\n  }\n\n  loadData = (type) => {\n\n    this.setState({\n      isLoading: true,\n      data: [], error:\n      null\n    });\n\n    let url = this.getUrl(type);\n\n    fetch(url)\n      .then(response => {\n        return response.json();\n      })\n      .then(data => this.setState({\n        data: data,\n        error: null,\n        isLoading: false\n      }))\n      .catch(error => this.setState({\n        data: [],\n        error: error.message,\n        isLoading: false\n      }));\n  }\n\n  showUserProfile = (userData) => {\n    this.setState({userProfile: userData})\n  }\n\n  render() {\n    const {\n      data,\n      isLoading,\n      error\n    } = this.state\n\n    return (\n      <div className=\"App\" >\n        {error && <ErrorMessage error={error}/>}\n        {isLoading && <Spinner />}\n        <div className=\"Load-data-panel\">\n          <span>Выбор объема данных</span>\n          <button className=\"Load-data-panel__button small-data-btn\" onClick={() => {this.loadData('small_data_value')}}>Малый объем данных</button>\n          <button className=\"Load-data-panel__button big-data-btn\" onClick={() => {this.loadData('big_data_value')}}>Большой объем данных</button>\n          <button className=\"Load-data-panel__button wrong-data-btn\" onClick={() => {this.loadData('wrong_url')}}>Неверная ссылка</button>\n        </div>\n        {data.length !== 0 && <Table data={data}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}